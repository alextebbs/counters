// @generated by protobuf-ts 2.9.3
// @generated from protobuf file "tag/v1/tag.proto" (package "tag.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TagService } from "./tag";
import type { TagServiceListResponse } from "./tag";
import type { TagServiceListRequest } from "./tag";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { TagServiceGetResponse } from "./tag";
import type { TagServiceGetRequest } from "./tag";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service tag.v1.TagService
 */
export interface ITagServiceClient {
    /**
     * @generated from protobuf rpc: Get(tag.v1.TagServiceGetRequest) returns (tag.v1.TagServiceGetResponse);
     */
    get(input: TagServiceGetRequest, options?: RpcOptions): UnaryCall<TagServiceGetRequest, TagServiceGetResponse>;
    /**
     * @generated from protobuf rpc: List(tag.v1.TagServiceListRequest) returns (tag.v1.TagServiceListResponse);
     */
    list(input: TagServiceListRequest, options?: RpcOptions): UnaryCall<TagServiceListRequest, TagServiceListResponse>;
}
/**
 * @generated from protobuf service tag.v1.TagService
 */
export class TagServiceClient implements ITagServiceClient, ServiceInfo {
    typeName = TagService.typeName;
    methods = TagService.methods;
    options = TagService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Get(tag.v1.TagServiceGetRequest) returns (tag.v1.TagServiceGetResponse);
     */
    get(input: TagServiceGetRequest, options?: RpcOptions): UnaryCall<TagServiceGetRequest, TagServiceGetResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<TagServiceGetRequest, TagServiceGetResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: List(tag.v1.TagServiceListRequest) returns (tag.v1.TagServiceListResponse);
     */
    list(input: TagServiceListRequest, options?: RpcOptions): UnaryCall<TagServiceListRequest, TagServiceListResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<TagServiceListRequest, TagServiceListResponse>("unary", this._transport, method, opt, input);
    }
}
