syntax = "proto3";

package counter.v1;

import "google/protobuf/timestamp.proto";
import "event/v1/event.proto";

option go_package = "github.com/alextebbs/counters/pb/counter/v1;counter";

message Counter {
  string id = 1;
  string title = 2;
  int32 count = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message CounterServiceCreateRequest {
  string title = 1;
  string event_title = 2;
}

message CounterServiceCreateResponse {
  Counter counter = 1;
}

message CounterServiceGetRequest {
  string id = 1; // Optional: Specify an ID to get a specific counter
}

message CounterServiceGetResponse {
  Counter counter = 1;
}

message CounterServiceListRequest {}

message CounterServiceListResponse {
  repeated Counter counters = 1;
}

message CounterServiceIncrementRequest {
  string id = 1;
  string title = 2;
}

message CounterServiceIncrementResponse {
  event.v1.Event event = 1;
  Counter counter = 2;
}

message CounterServiceDeleteRequest {
  string id = 1;
}

message CounterServiceDeleteResponse {
  string message = 1;
}

service CounterService {
  // Creates a counter and an initial event associated with it
  rpc Create(CounterServiceCreateRequest) returns (CounterServiceCreateResponse) {}
  // Get a single counter by ID
  rpc Get(CounterServiceGetRequest) returns (CounterServiceGetResponse) {}
  // List all counters
  rpc List(CounterServiceListRequest) returns (CounterServiceListResponse) {}
  // Increment a counter and create an event associated with the incrementation
  rpc Increment(CounterServiceIncrementRequest) returns (CounterServiceIncrementResponse) {}
  // Delete a counter and the events associated with it
  rpc Delete(CounterServiceDeleteRequest) returns (CounterServiceDeleteResponse) {}
}
